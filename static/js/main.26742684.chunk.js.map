{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","userId","a","fetch","response","json","data","filter","post","title","getPostDetails","postId","PostsList","selectedPostId","onPostSelect","useState","posts","setPosts","useEffect","fetchData","className","map","key","id","type","onClick","getPostComments","comment","removeComment","commentId","method","addComment","name","email","body","JSON","stringify","NewCommentForm","loadComments","setName","setEmail","setBody","onAddComment","event","preventDefault","onSubmit","placeholder","value","onChange","target","PostDetails","setPost","comments","setComments","showComments","setShowComments","postFromServer","commentsFromServer","prevShowComments","length","App","setUserId","setSelectedPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26742684.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  let response = await fetch(`${BASE_URL}/posts`);\n\n  response = await response.json();\n  response = response.data.filter(post => post.title && post.userId);\n\n  if (userId !== 0) {\n    response = response.filter(post => post.userId === userId);\n  }\n\n  return response;\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return response.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\nexport const PostsList = ({ userId, selectedPostId, onPostSelect }) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async() => {\n      const response = await getUserPosts(userId);\n\n      setPosts(response);\n    };\n\n    fetchData();\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:&nbsp;\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                selectedPostId === post.id\n                  ? onPostSelect('')\n                  : onPostSelect(post.id);\n              }}\n            >\n              {selectedPostId === post.id ? 'Hide' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n  onPostSelect: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  let response = await fetch(`${BASE_URL}/comments`);\n\n  response = await response.json();\n\n  return response.data.filter(comment => comment.postId === postId);\n};\n\nexport const removeComment = async(commentId) => {\n  const response = await fetch(`${BASE_URL}/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n\n  return response.json();\n};\n\nexport const addComment = async(postId, name, email, body) => {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ loadComments, postId }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const onAddComment = async(event) => {\n    event.preventDefault();\n    await addComment(postId, name, email, body);\n\n    setName('');\n    setEmail('');\n    setBody('');\n\n    loadComments();\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={onAddComment}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={({ target }) => setName(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={({ target }) => setEmail(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={({ target }) => setBody(target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  loadComments: PropTypes.func.isRequired,\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, removeComment } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [showComments, setShowComments] = useState([true]);\n\n  useEffect(() => {\n    const fetchData = async() => {\n      const postFromServer = await getPostDetails(selectedPostId);\n\n      setPost(postFromServer.data);\n      loadComments();\n    };\n\n    fetchData();\n  }, [selectedPostId]);\n\n  const loadComments = async() => {\n    const commentsFromServer = await getPostComments(selectedPostId);\n\n    setComments(commentsFromServer);\n  };\n\n  const onHideComments = () => {\n    setShowComments(prevShowComments => !prevShowComments);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={onHideComments}\n        >\n          {showComments ? 'Hide ' : 'Show '}\n          {comments.length}\n          &nbsp;comments\n        </button>\n\n        {showComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li className=\"PostDetails__list-item\" key={comment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={async() => {\n                    await removeComment(comment.id);\n                    loadComments();\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm loadComments={loadComments} postId={post.id} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState('');\n\n  const onUserSelect = ({ target }) => {\n    setUserId(+target.value);\n  };\n\n  const onPostSelect = (postId) => {\n    setSelectedPostId(postId);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select className=\"App__user-selector\" onChange={onUserSelect}>\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            selectedPostId={selectedPostId}\n            onPostSelect={onPostSelect}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId !== ''\n            && <PostDetails selectedPostId={selectedPostId} />}\n        </div>\n\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}